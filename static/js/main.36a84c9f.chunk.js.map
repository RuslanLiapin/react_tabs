{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","onTabSelected","selectedTabId","tabs","className","map","tab","role","onClick","id","onKeyDown","event","key","title","href","content","App","useState","setSelectedTabId","idTab","found","find","ReactDOM","render","document","getElementById"],"mappings":"iMAaaA,EAA4B,SAAC,GAEnC,IADLC,EACI,EADJA,cAAeC,EACX,EADWA,cAAeC,EAC1B,EAD0BA,KAE9B,OACE,qBAAK,UAAQ,gBAAb,SACE,qBAAKC,UAAU,gBAAf,SACE,6BACGD,EAAKE,KAAI,SAAAC,GAAG,OACX,oBAEEC,KAAK,MACLC,QAAS,kBAAMP,EAAcK,EAAIG,KACjCC,UAAW,SAACC,GACQ,UAAdA,EAAMC,KACRX,EAAcK,EAAIG,KAGtBL,UAAWF,EAAcW,QAAUP,EAAIO,MACnC,YAAc,GAClB,UAAQ,MAXV,SAaE,mBAAGC,KAAI,WAAMR,EAAIG,IAAM,UAAQ,UAA/B,SAA0CH,EAAIO,SAZzCP,EAAIG,cChBVN,EAAO,CAClB,CAAEM,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,CACjDJ,MAAO,QACPE,QAAS,gBAFX,mBAAOb,EAAP,KAAsBgB,EAAtB,KAgBA,OACE,sBAAKd,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAF,EAAcW,SAGjB,cAAC,EAAD,CACEV,KAAMA,EACND,cAAeA,EACfD,cAtBgB,SAACkB,GACrB,IAAMC,EAAQjB,EAAKkB,MAAK,SAAAf,GAAG,OAAIA,EAAIG,KAAOU,MAAU,KAEhDC,GACFF,EAAiB,CACfL,MAAOO,EAAMP,MACbE,QAASK,EAAML,aAmBjB,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAca,cCzCvBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.36a84c9f.chunk.js","sourcesContent":["interface TabsProps {\n  onTabSelected: (idTab: string) => void;\n  selectedTabId: {\n    title: string;\n    content: string;\n  };\n  tabs: {\n    id: string;\n    title: string;\n    content: string;\n  }[]\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  onTabSelected, selectedTabId, tabs,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              role=\"tab\"\n              onClick={() => onTabSelected(tab.id)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onTabSelected(tab.id);\n                }\n              }}\n              className={selectedTabId.title === tab.title\n                ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a href={`#${tab.id}`} data-cy=\"TabLink\">{tab.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState({\n    title: 'Tab 1',\n    content: 'Some text 1',\n  });\n\n  const onTabSelected = (idTab: string) => {\n    const found = tabs.find(tab => tab.id === idTab) || null;\n\n    if (found) {\n      setSelectedTabId({\n        title: found.title,\n        content: found.content,\n      });\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTabId.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabId.content}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}