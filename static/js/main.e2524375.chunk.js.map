{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","selectedTab","tabs","setSelectedTab","handleTabSelected","idTab","currentTab","find","tab","id","title","content","handleKeyDown","event","key","className","map","role","onClick","onKeyDown","classNames","href","App","useState","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAE/B,IADLC,EACI,EADJA,YAAaC,EACT,EADSA,KAAMC,EACf,EADeA,eAEbC,EAAoB,SAACC,GACzB,IAAMC,EAAaJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAU,KAErDC,GACFH,EAAe,CACbO,MAAOJ,EAAWI,MAClBC,QAASL,EAAWK,QACpBF,GAAIH,EAAWG,MAKfG,EAAgB,SAACC,GACH,UAAdA,EAAMC,KACRV,EAAkBH,EAAYQ,KAIlC,OACE,qBAAK,UAAQ,gBAAb,SACE,qBAAKM,UAAU,gBAAf,SACE,6BACGb,EAAKc,KAAI,SAAAR,GAAG,OACX,oBAEES,KAAK,MACLC,QAAS,kBAAMd,EAAkBI,EAAIC,KACrCU,UAAWP,EACXG,UAAWK,IAAW,CACpB,YAAanB,EAAYS,QAAUF,EAAIE,QAEzC,UAAQ,MARV,SAUE,mBAAGW,KAAI,WAAMb,EAAIC,IAAM,UAAQ,UAA/B,SAA0CD,EAAIE,SATzCF,EAAIC,cC9BVP,EAAO,CAClB,CAAEO,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BW,EAAgB,WAC3B,MAAsCC,mBAASrB,EAAK,IAApD,mBAAOD,EAAP,KAAoBE,EAApB,KAEA,OACE,sBAAKY,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAd,EAAYS,SAGf,cAAC,EAAD,CACER,KAAMA,EACND,YAAaA,EACbE,eAAgBA,IAGlB,qBAAKY,UAAU,QAAQ,UAAQ,aAA/B,SACGd,EAAYU,cC3BrBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e2524375.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTab: Tab,\n  setSelectedTab: React.Dispatch<React.SetStateAction<Tab>>,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  selectedTab, tabs, setSelectedTab,\n}) => {\n  const handleTabSelected = (idTab: string) => {\n    const currentTab = tabs.find(tab => tab.id === idTab) || null;\n\n    if (currentTab) {\n      setSelectedTab({\n        title: currentTab.title,\n        content: currentTab.content,\n        id: currentTab.id,\n      });\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleTabSelected(selectedTab.id);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              role=\"tab\"\n              onClick={() => handleTabSelected(tab.id)}\n              onKeyDown={handleKeyDown}\n              className={classNames({\n                'is-active': selectedTab.title === tab.title,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a href={`#${tab.id}`} data-cy=\"TabLink\">{tab.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        setSelectedTab={setSelectedTab}\n      />\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}